class Solution {
    public int[] twoSum(int[] numbers, int target) {
        int left = 0;
        int right = numbers.length - 1;
        
        // Keep looping until left meets right
        while (left < right) {
            int sum = numbers[left] + numbers[right];
            
            if (sum == target) {
                // Found the pair, return 1-based indices
                return new int[]{left + 1, right + 1};
            } else if (sum > target) {
                // Sum too big, decrease right pointer
                right--;
            } else {
                // Sum too small, increase left pointer
                left++;
            }
        }
        
        // Problem guarantees one solution, so this won't be reached
        return new int[]{-1, -1};
    }
}

ðŸŸ¢ Super Simple Pseudocode:

Start with left = 0 and right = end of array.

While left < right:
    sum = numbers[left] + numbers[right]

    If sum == target:
        Return [left + 1, right + 1]

    Else if sum > target:
        Move right pointer left (right--)

    Else:
        Move left pointer right (left++)
