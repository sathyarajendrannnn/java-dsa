class Solution {
    public ListNode mergeTwoLists(ListNode list1, ListNode list2) {
        ListNode temp = new ListNode(0); // Dummy node (starting point)
        ListNode curr = temp; // Pointer to build the merged list

        while (list1 != null && list2 != null) {
            if (list1.val <= list2.val) {
                curr.next = list1; // Attach list1 node
                list1 = list1.next; // Move list1
            } else {
                curr.next = list2; // Attach list2 node
                list2 = list2.next; // Move list2
            }
            curr = curr.next; // Move curr forward
        }

        // Attach remaining nodes if any
        if (list1 != null) {
            curr.next = list1;
        } else {
            curr.next = list2;
        }

        return temp.next; // Return merged list starting after dummy
    }
}
Pseudo Code to Merge Two Sorted Lists 
FUNCTION mergeTwoLists(list1, list2):
    CREATE dummy node temp with value 0
    SET curr = temp
    
    WHILE list1 is NOT NULL AND list2 is NOT NULL:
        IF list1's value <= list2's value:
            SET curr.next = list1
            MOVE list1 to next node
        ELSE:
            SET curr.next = list2
            MOVE list2 to next node
        MOVE curr to next node
    
    IF list1 is NOT NULL:
        SET curr.next = list1  // Attach remaining list1 nodes
    ELSE:
        SET curr.next = list2  // Attach remaining list2 nodes
    
    RETURN temp.next  // Skip dummy node and return merged list
