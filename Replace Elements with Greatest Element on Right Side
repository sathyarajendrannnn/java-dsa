class Solution {
    public int[] replaceElements(int[] arr) {
        int n = arr.length;
        int gtr = -1; // Last element should be -1

        for (int i = n - 1; i >= 0; i--) {
            int temp = arr[i]; // Store current element before modifying
            arr[i] = gtr; // Replace with maxFromRight
            gtr = Math.max(gtr, temp); // Update maxFromRight
        }

        return arr;
    }
}
 Input: arr = [17,18,5,4,6,1]
Output: [18,6,6,6,1,-1]
Explanation: 
- index 0 --> the greatest element to the right of index 0 is index 1 (18).
- index 1 --> the greatest element to the right of index 1 is index 4 (6).
- index 2 --> the greatest element to the right of index 2 is index 4 (6).
- index 3 --> the greatest element to the right of index 3 is index 4 (6).
- index 4 --> the greatest element to the right of index 4 is index 5 (1).
- index 5 --> there are no elements to the right of index 5, so we put -1.
