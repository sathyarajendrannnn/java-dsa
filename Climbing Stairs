 class Solution {
    public int climbStairs(int n) {
        if (n == 1) return 1;
        if (n == 2) return 2;

        int[] dp = new int[n + 1]; // to store ways for each step
        dp[1] = 1; // 1 way to reach step 1
        dp[2] = 2; // 2 ways to reach step 2

        for (int i = 3; i <= n; i++) {
            dp[i] = dp[i - 1] + dp[i - 2]; // sum of last two steps
        }

        return dp[n];
    }
}
pseudo code 
Function climbStairs(n):
    If n is 1:
        Return 1
    If n is 2:
        Return 2

    Initialize dp array of size n + 1
    dp[1] = 1
    dp[2] = 2

    For i from 3 to n:
        dp[i] = dp[i - 1] + dp[i - 2]

    Return dp[n]
